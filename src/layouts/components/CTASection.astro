---
interface Props {
  title: string;
  description?: string;
  primaryButton?: {
    text: string;
    link: string;
  };
  secondaryButton?: {
    text: string;
    link: string;
  };
  variant?: 'primary' | 'secondary' | 'gradient';
}

const {
  title,
  description,
  primaryButton,
  secondaryButton,
  variant = 'primary'
} = Astro.props;

const variantClasses = {
  primary: 'bg-primary text-white',
  secondary: 'bg-theme-light dark:bg-darkmode-theme-light text-dark dark:text-white',
  gradient: 'bg-gradient text-white',
};
---

<section class={`cta-section rounded-2xl p-8 md:p-12 text-center ${variantClasses[variant]}`}>
  <div class="max-w-3xl mx-auto">
    <h2 class="mb-4 text-3xl md:text-4xl font-bold">
      {title}
    </h2>

    {description && (
      <p class="mb-8 text-lg opacity-90">
        {description}
      </p>
    )}

    <div class="flex flex-col sm:flex-row gap-4 justify-center items-center">
      {primaryButton && (
        <a
          href={primaryButton.link}
          class="btn btn-primary bg-white text-primary hover:bg-white/90 px-8 py-3 rounded-lg font-semibold transition-all inline-flex items-center"
        >
          {primaryButton.text}
          <svg class="ml-2 h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
          </svg>
        </a>
      )}

      {secondaryButton && (
        <a
          href={secondaryButton.link}
          class="btn btn-outline border-2 border-white text-white hover:bg-white hover:text-primary px-8 py-3 rounded-lg font-semibold transition-all"
        >
          {secondaryButton.text}
        </a>
      )}
    </div>
  </div>
</section>

<style>
  .cta-section {
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
  }
</style>
