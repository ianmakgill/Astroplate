---
import Logo from "@/components/Logo.astro";
import Social from "@/components/Social.astro";
import config from "@/config/config.json";
import social from "@/config/social.json";
import {
  constructUrl,
  getLangFromUrl,
  getTranslations,
} from "@/lib/utils/i18nUtils";
import { markdownify } from "@/lib/utils/textConverter";
import type { ContentEntryMap } from "astro:content";
import { getRelativeLocaleUrl } from "astro:i18n";

const { default_language, default_language_in_path } = config.settings;
const { trailing_slash } = config.site;

const lang = getLangFromUrl(Astro.url);
const menu = await getTranslations(lang as keyof ContentEntryMap);
let footer: any = [];
if (menu) {
  footer = menu.footer;
}

const constructLocalizedUrl = (url: string) => {
  if (lang === default_language) {
    return constructUrl(
      default_language_in_path ? `/${lang}${url}` : url,
      lang,
      default_language,
      trailing_slash
    );
  } else {
    return constructUrl(url, lang, default_language, trailing_slash);
  }
};
---

<footer class="bg-theme-light dark:bg-darkmode-theme-light">
  <div class="container">
    <div class="row items-center py-10">
      <div class="mb-8 text-center lg:col-3 lg:mb-0 lg:text-left">
        <Logo />
      </div>
      <div class="mb-8 text-center lg:col-6 lg:mb-0">
        <ul>
          {
            footer.map((menu: any) => (
              <li class="m-3 inline-block">
                <a href={constructLocalizedUrl(menu.url)}>{menu.name}</a>
              </li>
            ))
          }
        </ul>
      </div>
      <div class="mb-8 text-center lg:col-3 lg:mb-0 lg:mt-0 lg:text-right">
        <Social source={social.main} className="social-icons" />
      </div>
    </div>
  </div>
  <div class="border-t border-border py-7 dark:border-darkmode-border">
    <div class="container text-center text-light dark:text-darkmode-light">
      <p set:html={markdownify(config.params.copyright)} />
    </div>
  </div>
</footer>
