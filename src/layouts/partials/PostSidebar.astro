---
import config from "@/config/config.json";
import { constructUrl, getLangFromUrl } from "@/lib/utils/i18nUtils";
import { humanize } from "@/lib/utils/textConverter";
const { default_language, default_language_in_path } = config.settings;
const { trailing_slash } = config.site;

const { tags, categories, allCategories } = Astro.props;
const lang = getLangFromUrl(Astro.url);

const constructLocalizedUrl = (url: string) => {
  if (lang === default_language) {
    return constructUrl(
      default_language_in_path ? `/${lang}${url}` : url,
      lang,
      default_language,
      trailing_slash
    );
  } else {
    return constructUrl(url, lang, default_language, trailing_slash);
  }
};
---

<div class="lg:col-4">
  <!-- categories -->
  <div class="mb-8">
    <h5 class="mb-6">Categories</h5>
    <div class="rounded bg-theme-light p-8 dark:bg-darkmode-theme-light">
      <ul class="space-y-4">
        {
          categories.map((category: any) => {
            const count = allCategories.filter(
              (c: any) => c === category
            ).length;
            return (
              <li>
                <a
                  class="flex justify-between hover:text-primary dark:hover:text-darkmode-primary"
                  href={constructLocalizedUrl(`/categories/${category}`)}
                >
                  {humanize(category)} <span>({count})</span>
                </a>
              </li>
            );
          })
        }
      </ul>
    </div>
  </div>
  <!-- tags -->
  <div class="mb-8">
    <h5 class="mb-6">Tags</h5>
    <div class="rounded bg-theme-light p-6 dark:bg-darkmode-theme-light">
      <ul>
        {
          tags.map((tag: any) => {
            return (
              <li class="inline-block">
                <a
                  class="m-1 block rounded bg-white px-3 py-1 hover:bg-primary hover:text-white dark:bg-darkmode-body dark:hover:bg-darkmode-primary dark:hover:text-dark"
                  href={constructLocalizedUrl(`/tags/${tag}`)}
                >
                  {humanize(tag)}
                </a>
              </li>
            );
          })
        }
      </ul>
    </div>
  </div>
</div>
